{"version":3,"sources":["context/MyContext.js","context/MyProvider.jsx","components/Count.jsx","components/Counter.jsx","App.jsx","index.js"],"names":["MyContext","createContext","MyProvider","props","useState","count","setCount","appHeading","useRef","Provider","value","children","Count","useContext","Counter","onClick","prevCount","App","context","console","log","current","ReactDOM","render","document","querySelector"],"mappings":"6MAIeA,EAFGC,wBAAc,M,OCajBC,EAXI,SAACC,GAAW,IAAD,EACFC,mBAAS,GADP,mBACrBC,EADqB,KACdC,EADc,KAEtBC,EAAaC,iBAAO,eAE1B,OACE,cAAC,EAAUC,SAAX,CAAoBC,MAAO,CAAEL,QAAOC,WAAUC,cAA9C,SACGJ,EAAMQ,YCKEC,EAXD,WACZ,IACQP,EADQQ,qBAAWb,GACnBK,MAER,OACE,8BACE,6BAAKA,OCUIS,EAhBC,WACd,IACQR,EADQO,qBAAWb,GACnBM,SAER,OACE,gCACE,wBAAQS,QAAS,kBAAMT,GAAS,SAACU,GAAD,OAAeA,EAAY,MAA3D,uBAGA,wBAAQD,QAAS,kBAAMT,GAAS,SAACU,GAAD,OAAeA,EAAY,MAA3D,2BCUSC,G,MAdH,WACV,IAAMC,EAAUL,qBAAWb,GAC3BmB,QAAQC,IAAIF,GAFI,IAGRX,EAAeW,EAAfX,WAER,OACE,iCACE,6BAAKA,EAAWc,UAChB,cAAC,EAAD,IACA,cAAC,EAAD,SCZNC,IAASC,OACL,cAAC,EAAD,UAAY,cAAC,EAAD,MAAsBC,SAASC,cAAc,Y","file":"static/js/main.03200989.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst MyContext = createContext(null)\n\nexport default MyContext","import { useState, useRef } from 'react';\n\nimport MyContext from './MyContext';\n\nconst MyProvider = (props) => {\n  const [count, setCount] = useState(0);\n  const appHeading = useRef('Context API');\n\n  return (\n    <MyContext.Provider value={{ count, setCount, appHeading }}>\n      {props.children}\n    </MyContext.Provider>\n  );\n};\n\nexport default MyProvider;\n","import { useContext } from 'react';\n\nimport MyContext from '../context/MyContext';\n\nconst Count = () => {\n  const context = useContext(MyContext);\n  const { count } = context;\n\n  return (\n    <div>\n      <h1>{count}</h1>\n    </div>\n  );\n};\n\nexport default Count;\n","import { useContext } from 'react';\n\nimport MyContext from '../context/MyContext';\n\nconst Counter = () => {\n  const context = useContext(MyContext);\n  const { setCount } = context;\n\n  return (\n    <div>\n      <button onClick={() => setCount((prevCount) => prevCount + 1)}>\n        Increment\n      </button>\n      <button onClick={() => setCount((prevCount) => prevCount - 1)}>\n        Decrement\n      </button>\n    </div>\n  );\n};\n\nexport default Counter;\n","import { useContext } from 'react';\n\nimport Count from './components/Count';\nimport Counter from './components/Counter';\n\nimport MyContext from './context/MyContext';\n\nimport './App.css';\n\nconst App = () => {\n  const context = useContext(MyContext);\n  console.log(context);\n  const { appHeading } = context;\n\n  return (\n    <main>\n      <h1>{appHeading.current}</h1>\n      <Count />\n      <Counter />\n    </main>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport MyProvider from './context/MyProvider';\nimport App from './App';\n\nReactDOM.render(\n    <MyProvider><App /></MyProvider>, document.querySelector('#root')\n);\n\n\n"],"sourceRoot":""}